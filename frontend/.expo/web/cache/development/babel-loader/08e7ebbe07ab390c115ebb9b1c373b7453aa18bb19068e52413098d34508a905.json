{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useRef, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { colors } from \"../../utils/colors\";\nimport { sendMessage } from \"../../services/ai\";\nimport GoogleSignIn from \"../Auth/GoogleSignIn\";\nimport { generateReferralCode } from \"../../utils/referralUtils\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ChatUI(_ref) {\n  var questionsBeforeLogin = _ref.questionsBeforeLogin,\n    showRefOffer = _ref.showRefOffer;\n  console.log('ChatUI initialized with:', {\n    questionsBeforeLogin: questionsBeforeLogin,\n    showRefOffer: showRefOffer\n  });\n  var isDev = process.env.NODE_ENV === 'development';\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    messages = _useState2[0],\n    setMessages = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    input = _useState4[0],\n    setInput = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    loading = _useState6[0],\n    setLoading = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    connectionError = _useState8[0],\n    setConnectionError = _useState8[1];\n  var _useState9 = useState(0),\n    _useState10 = _slicedToArray(_useState9, 2),\n    questionCount = _useState10[0],\n    setQuestionCount = _useState10[1];\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    showLoginPrompt = _useState12[0],\n    setShowLoginPrompt = _useState12[1];\n  var _useState13 = useState(null),\n    _useState14 = _slicedToArray(_useState13, 2),\n    user = _useState14[0],\n    setUser = _useState14[1];\n  var _useState15 = useState(false),\n    _useState16 = _slicedToArray(_useState15, 2),\n    showExitConfirm = _useState16[0],\n    setShowExitConfirm = _useState16[1];\n  var _useState17 = useState(null),\n    _useState18 = _slicedToArray(_useState17, 2),\n    referralCode = _useState18[0],\n    setReferralCode = _useState18[1];\n  var _useState19 = useState(false),\n    _useState20 = _slicedToArray(_useState19, 2),\n    showRefModal = _useState20[0],\n    setShowRefModal = _useState20[1];\n  var listRef = useRef(null);\n  var FALLBACK_QUESTIONS = [{\n    text: \"Let's explore a different angle - what motivates you the most?\",\n    options: [\"Personal growth\", \"Making a difference\", \"Success and achievement\"]\n  }, {\n    text: \"I'm curious to know - what area of your life would you most like to improve?\",\n    options: [\"Career development\", \"Personal relationships\", \"Health and wellness\"]\n  }, {\n    text: \"Here's an interesting question - what does success mean to you?\",\n    options: [\"Financial freedom\", \"Work-life balance\", \"Personal fulfillment\"]\n  }, {\n    text: \"Let's think about this differently - what's your biggest goal right now?\",\n    options: [\"Learning new skills\", \"Building better habits\", \"Growing professionally\"]\n  }, {\n    text: \"I'd love to understand - what brings you the most satisfaction?\",\n    options: [\"Helping others\", \"Achieving goals\", \"Learning and growing\"]\n  }];\n  var getRandomFallbackQuestion = function getRandomFallbackQuestion() {\n    var randomIndex = Math.floor(Math.random() * FALLBACK_QUESTIONS.length);\n    return FALLBACK_QUESTIONS[randomIndex];\n  };\n  useEffect(function () {\n    console.log('Processing showRefOffer:', showRefOffer);\n    if (showRefOffer) {\n      var generateInitialReferral = function () {\n        var _ref2 = _asyncToGenerator(function* () {\n          try {\n            var tempUserId = 'temp-' + Date.now();\n            var code = yield generateReferralCode(tempUserId);\n            console.log('Generated initial referral code:', code);\n            setReferralCode(code);\n            setShowRefModal(true);\n          } catch (error) {\n            console.error('Error generating initial referral code:', error);\n          }\n        });\n        return function generateInitialReferral() {\n          return _ref2.apply(this, arguments);\n        };\n      }();\n      generateInitialReferral();\n    }\n  }, [showRefOffer]);\n  useEffect(function () {\n    console.log('State updated:', {\n      user: user ? _objectSpread(_objectSpread({}, user), {}, {\n        uid: user.uid\n      }) : null,\n      referralCode: referralCode,\n      showLoginPrompt: showLoginPrompt,\n      questionCount: questionCount,\n      showExitConfirm: showExitConfirm,\n      showRefModal: showRefModal\n    });\n  }, [user, referralCode, showLoginPrompt, questionCount, showExitConfirm, showRefModal]);\n  var LOGIN_PROMPT_THRESHOLD = isDev ? questionsBeforeLogin || 5 : 5;\n  useEffect(function () {\n    var welcomeMessage = {\n      id: Date.now(),\n      text: `Welcome! I'm here to help you achieve your goals. What brings you here today?`,\n      sender: 'bot',\n      isQuestion: true\n    };\n    setMessages([welcomeMessage]);\n  }, []);\n  useEffect(function () {\n    if (isDev) {\n      console.log('Development mode: Chat initialized');\n    }\n  }, []);\n  useEffect(function () {\n    if (questionCount >= LOGIN_PROMPT_THRESHOLD && !showLoginPrompt && !user) {\n      console.log(`Showing login prompt after ${questionCount} questions`);\n      setShowLoginPrompt(true);\n    }\n  }, [questionCount, showLoginPrompt, user]);\n  useEffect(function () {\n    var checkConnection = function () {\n      var _ref3 = _asyncToGenerator(function* () {\n        try {\n          var response = yield fetch('http://localhost:3000/api/health');\n          if (!response.ok) throw new Error('Backend unavailable');\n          setConnectionError(false);\n        } catch (error) {\n          console.error('Connection check failed:', error);\n          setConnectionError(true);\n        }\n      });\n      return function checkConnection() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n    checkConnection();\n    var interval = setInterval(checkConnection, 5000);\n    return function () {\n      return clearInterval(interval);\n    };\n  }, []);\n  var handleSendMessage = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      if (!input.trim() || loading) return;\n      try {\n        if (connectionError) {\n          throw new Error('Cannot connect to chat service');\n        }\n        setLoading(true);\n        var userMessage = {\n          id: Date.now(),\n          text: input,\n          sender: 'user'\n        };\n        setMessages(function (prev) {\n          return [].concat(_toConsumableArray(prev), [userMessage]);\n        });\n        setInput('');\n        var result = yield sendMessage(input);\n        if (!result) {\n          throw new Error('No response received from server');\n        }\n        if (!result.text && !result.options) {\n          var fallbackQuestion = getRandomFallbackQuestion();\n          result.text = fallbackQuestion.text;\n          result.options = fallbackQuestion.options;\n        }\n        var botMessage = {\n          id: Date.now(),\n          text: result.text || \"I'm having trouble understanding. Could you rephrase that?\",\n          sender: 'bot',\n          isQuestion: typeof result.text === 'string' && (result.text.includes('?') || result.text.includes(\"I'd like to understand\")),\n          options: result.options || []\n        };\n        setMessages(function (prev) {\n          return [].concat(_toConsumableArray(prev), [botMessage]);\n        });\n        if (botMessage.isQuestion) {\n          var newCount = questionCount + 1;\n          setQuestionCount(newCount);\n        }\n      } catch (error) {\n        console.error('Chat error:', error);\n        var errorMessage;\n        var _fallbackQuestion = getRandomFallbackQuestion();\n        if (connectionError) {\n          errorMessage = 'Cannot connect to chat service. Please check your connection.';\n        } else if (error.message.includes('Empty response') || error.message.includes('No response')) {\n          errorMessage = _fallbackQuestion.text;\n        } else {\n          errorMessage = `I apologize for the confusion. ${_fallbackQuestion.text}`;\n        }\n        setMessages(function (prev) {\n          return [].concat(_toConsumableArray(prev), [{\n            id: Date.now(),\n            text: errorMessage,\n            sender: 'bot',\n            isQuestion: true,\n            options: _fallbackQuestion.options\n          }]);\n        });\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function handleSendMessage() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var handleQuickResponse = function () {\n    var _ref5 = _asyncToGenerator(function* (response) {\n      if (loading) return;\n      try {\n        setLoading(true);\n        var userMessage = {\n          id: Date.now(),\n          text: response,\n          sender: 'user'\n        };\n        setMessages(function (prev) {\n          return [].concat(_toConsumableArray(prev), [userMessage]);\n        });\n        var result = yield sendMessage(response);\n        if (!result) {\n          throw new Error('No response received from server');\n        }\n        if (!result.text && !result.options) {\n          var fallbackQuestion = getRandomFallbackQuestion();\n          result.text = fallbackQuestion.text;\n          result.options = fallbackQuestion.options;\n        }\n        var botMessage = {\n          id: Date.now(),\n          text: result.text || \"I understand. Tell me more about that.\",\n          sender: 'bot',\n          isQuestion: typeof result.text === 'string' && (result.text.includes('?') || result.text.includes(\"I'd like to understand\")),\n          options: result.options || []\n        };\n        setMessages(function (prev) {\n          return [].concat(_toConsumableArray(prev), [botMessage]);\n        });\n        if (botMessage.isQuestion) {\n          var newCount = questionCount + 1;\n          setQuestionCount(newCount);\n        }\n      } catch (error) {\n        console.error('Quick response error:', error);\n        var errorMessage;\n        var errorOptions;\n        var _fallbackQuestion2 = getRandomFallbackQuestion();\n        if (connectionError) {\n          errorMessage = 'Cannot connect to chat service. Please check your connection.';\n          errorOptions = [];\n        } else if (error.message.includes('Empty response') || error.message.includes('No response')) {\n          errorMessage = _fallbackQuestion2.text;\n          errorOptions = _fallbackQuestion2.options;\n        } else {\n          errorMessage = `That's an interesting perspective. ${_fallbackQuestion2.text}`;\n          errorOptions = _fallbackQuestion2.options;\n        }\n        setMessages(function (prev) {\n          return [].concat(_toConsumableArray(prev), [{\n            id: Date.now(),\n            text: errorMessage,\n            sender: 'bot',\n            isQuestion: true,\n            options: errorOptions\n          }]);\n        });\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function handleQuickResponse(_x) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var handleGoogleLogin = function handleGoogleLogin() {\n    console.log('Google login clicked');\n  };\n  var handleGoogleSignIn = function () {\n    var _ref6 = _asyncToGenerator(function* (userData) {\n      console.log('Starting Google sign in process...', userData);\n      try {\n        setUser(userData);\n        console.log('User set:', userData);\n        var code;\n        try {\n          code = yield generateReferralCode(userData.uid);\n        } catch (error) {\n          console.error('Failed to generate referral code:', error);\n          setUser(null);\n          alert('Unable to complete sign-in process. Please try again later. ' + 'If the problem persists, please contact support.');\n          return;\n        }\n        console.log('Generated referral code:', code);\n        setReferralCode(code);\n        setShowLoginPrompt(false);\n        setShowRefModal(true);\n        console.log('Updated state:', {\n          user: userData,\n          referralCode: code,\n          showLoginPrompt: false,\n          showRefModal: true\n        });\n      } catch (error) {\n        console.error('Error in sign-in process:', error);\n        setUser(null);\n        alert('Sign-in process failed. Please try again later. ' + 'If the problem persists, please contact support.');\n      }\n    });\n    return function handleGoogleSignIn(_x2) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  var handleSkipSignIn = function handleSkipSignIn() {\n    setShowLoginPrompt(false);\n    console.log('User skipped sign in');\n  };\n  var handleExit = function handleExit() {\n    setShowExitConfirm(true);\n  };\n  var handleConfirmExit = function handleConfirmExit() {\n    window.location.href = '/';\n  };\n  var handleCancelExit = function handleCancelExit() {\n    setShowExitConfirm(false);\n  };\n  if (referralCode && (user != null && user.uid || showRefModal)) {\n    console.log('Rendering referral code interface:', {\n      user: user || 'no user',\n      referralCode: referralCode || 'no code',\n      userExists: !!user,\n      codeExists: !!referralCode,\n      showRefModal: showRefModal,\n      showRefOffer: showRefOffer\n    });\n    return _jsxs(View, {\n      style: [styles.container, {\n        backgroundColor: colors.background.primary\n      }],\n      children: [_jsxs(View, {\n        style: styles.referralContainer,\n        children: [_jsx(Text, {\n          style: styles.referralTitle,\n          children: \"Thank You for Using HustleBot!\"\n        }), _jsxs(View, {\n          style: styles.referralCodeBox,\n          children: [_jsx(Text, {\n            style: styles.referralCodeLabel,\n            children: \"Your Exclusive Referral Code:\"\n          }), _jsx(Text, {\n            style: styles.referralCodeText,\n            children: referralCode\n          }), _jsx(Text, {\n            style: styles.referralExpiry,\n            children: \"This code will expire in 48 hours and can only be used once.\"\n          })]\n        }), _jsx(Text, {\n          style: styles.referralMessage,\n          children: \"Share this code with someone who would benefit from HustleBot's guidance. Choose wisely - you can only invite one person!\"\n        }), _jsx(TouchableOpacity, {\n          style: styles.exitButton,\n          onPress: handleExit,\n          children: _jsx(Text, {\n            style: styles.exitButtonText,\n            children: \"Return to Home\"\n          })\n        })]\n      }), showExitConfirm && _jsx(View, {\n        style: styles.modalOverlay,\n        children: _jsxs(View, {\n          style: styles.confirmModal,\n          children: [_jsx(Text, {\n            style: styles.confirmTitle,\n            children: \"Are you sure?\"\n          }), _jsx(Text, {\n            style: styles.confirmText,\n            children: \"Make sure you've saved your referral code before leaving.\"\n          }), _jsxs(View, {\n            style: styles.confirmButtons,\n            children: [_jsx(TouchableOpacity, {\n              style: [styles.confirmButton, styles.cancelButton],\n              onPress: handleCancelExit,\n              children: _jsx(Text, {\n                style: [styles.confirmButtonText, {\n                  color: colors.text.primary\n                }],\n                children: \"Stay Here\"\n              })\n            }), _jsx(TouchableOpacity, {\n              style: [styles.confirmButton, styles.confirmExitButton],\n              onPress: handleConfirmExit,\n              children: _jsx(Text, {\n                style: styles.confirmButtonText,\n                children: \"Yes, Exit\"\n              })\n            })]\n          })]\n        })\n      })]\n    });\n  }\n  useEffect(function () {\n    console.log('Render state:', {\n      user: !!user,\n      referralCode: !!referralCode,\n      showLoginPrompt: showLoginPrompt,\n      questionCount: questionCount\n    });\n  }, [user, referralCode, showLoginPrompt, questionCount]);\n  useEffect(function () {\n    console.log('Referral display conditions updated:', {\n      user: user == null ? void 0 : user.uid,\n      referralCode: referralCode,\n      showRefModal: showRefModal,\n      showRefOffer: showRefOffer,\n      shouldShow: (user == null ? void 0 : user.uid) && referralCode || showRefModal && referralCode\n    });\n  }, [user, referralCode, showRefModal, showRefOffer]);\n  useEffect(function () {\n    if (user != null && user.uid && !referralCode && !showRefModal) {\n      console.log('User signed in but no referral code yet, generating...');\n      generateReferralCode(user.uid).then(function (code) {\n        console.log('Generated referral code after state check:', code);\n        setReferralCode(code);\n        setShowRefModal(true);\n      }).catch(function (error) {\n        console.error('Failed to generate referral code:', error);\n        alert('Failed to generate referral code. Please try again.');\n      });\n    }\n  }, [user, referralCode, showRefModal]);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [isDev && _jsx(View, {\n      style: styles.devBanner,\n      children: _jsx(Text, {\n        style: styles.devBannerText,\n        children: \"DEVELOPMENT MODE\"\n      })\n    }), _jsx(FlatList, {\n      ref: listRef,\n      data: messages,\n      keyExtractor: function keyExtractor(item) {\n        return item.id.toString();\n      },\n      renderItem: function renderItem(_ref7) {\n        var item = _ref7.item;\n        return _jsxs(View, {\n          style: [styles.message, item.sender === 'user' ? styles.userMessage : styles.botMessage, item.isQuestion && styles.questionMessage, item.isReferralCode && styles.referralMessage],\n          children: [_jsx(Text, {\n            style: [styles.messageText, item.sender === 'user' ? styles.userMessageText : styles.botMessageText, item.isQuestion && styles.questionText, item.isReferralCode && styles.referralText],\n            children: item.text\n          }), item.options && item.sender === 'bot' && _jsx(View, {\n            style: styles.optionsContainer,\n            children: item.options.map(function (option, index) {\n              return _jsx(TouchableOpacity, {\n                style: styles.optionButton,\n                onPress: function onPress() {\n                  return handleQuickResponse(option);\n                },\n                disabled: loading,\n                children: _jsx(Text, {\n                  style: styles.optionText,\n                  children: option\n                })\n              }, index);\n            })\n          })]\n        });\n      },\n      onContentSizeChange: function onContentSizeChange() {\n        var _listRef$current;\n        return (_listRef$current = listRef.current) == null ? void 0 : _listRef$current.scrollToEnd();\n      },\n      style: styles.messageList\n    }), showLoginPrompt && _jsx(GoogleSignIn, {\n      onSignIn: handleGoogleSignIn,\n      onClose: handleSkipSignIn\n    }), _jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(TextInput, {\n        style: styles.input,\n        value: input,\n        onChangeText: setInput,\n        placeholder: \"Type a message...\",\n        placeholderTextColor: colors.text.tertiary,\n        onSubmitEditing: handleSendMessage,\n        editable: !loading\n      }), loading && _jsx(ActivityIndicator, {\n        style: styles.loader,\n        color: colors.primary\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: colors.background.primary,\n    height: '100vh',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  message: {\n    margin: 10,\n    padding: 10,\n    borderRadius: 20,\n    maxWidth: '80%'\n  },\n  userMessage: {\n    backgroundColor: colors.chatBubble.user,\n    alignSelf: 'flex-end',\n    marginLeft: '20%'\n  },\n  botMessage: {\n    backgroundColor: colors.chatBubble.bot,\n    alignSelf: 'flex-start',\n    marginRight: '20%',\n    borderWidth: 1,\n    borderColor: colors.background.tertiary\n  },\n  messageText: {\n    fontSize: 16,\n    lineHeight: 20\n  },\n  userMessageText: {\n    color: colors.text.inverse\n  },\n  botMessageText: {\n    color: colors.text.secondary\n  },\n  inputContainer: {\n    padding: 10,\n    borderTopWidth: 1,\n    borderTopColor: colors.background.tertiary,\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  input: {\n    flex: 1,\n    backgroundColor: colors.background.secondary,\n    padding: 12,\n    borderRadius: 20,\n    fontSize: 16,\n    color: colors.text.primary\n  },\n  loader: {\n    marginLeft: 10\n  },\n  devBanner: {\n    backgroundColor: colors.background.tertiary,\n    padding: 10,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  devBannerText: {\n    color: colors.text.secondary,\n    fontWeight: 'bold'\n  },\n  questionMessage: {\n    backgroundColor: colors.chatBubble.system,\n    borderWidth: 1,\n    borderColor: colors.info\n  },\n  questionText: {\n    fontWeight: '500',\n    color: colors.text.secondary\n  },\n  optionsContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'flex-start',\n    marginTop: 10,\n    gap: 8\n  },\n  optionButton: {\n    backgroundColor: colors.background.secondary,\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n    borderRadius: 16,\n    borderWidth: 1,\n    borderColor: colors.primary\n  },\n  optionText: {\n    color: colors.text.primary,\n    fontSize: 14\n  },\n  loginPrompt: {\n    backgroundColor: colors.background.secondary,\n    padding: 16,\n    margin: 16,\n    borderRadius: 8,\n    alignItems: 'center'\n  },\n  loginText: {\n    color: colors.text.primary,\n    marginBottom: 12,\n    textAlign: 'center'\n  },\n  googleButton: {\n    backgroundColor: '#4285F4',\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n    borderRadius: 4\n  },\n  googleButtonText: {\n    color: colors.text.inverse,\n    fontWeight: 'bold'\n  },\n  messageList: {\n    flex: 1,\n    width: '100%',\n    overflow: 'auto'\n  },\n  referralMessage: {\n    backgroundColor: colors.success,\n    borderWidth: 0,\n    padding: 20\n  },\n  referralText: {\n    color: colors.text.inverse,\n    fontSize: 16,\n    lineHeight: 24,\n    textAlign: 'center'\n  },\n  referralContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 24,\n    backgroundColor: colors.background.primary\n  },\n  referralTitle: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    color: colors.text.primary,\n    marginBottom: 32,\n    textAlign: 'center',\n    textShadow: `0 0 10px ${colors.primary}40`\n  },\n  referralCodeBox: {\n    backgroundColor: colors.background.tertiary,\n    padding: 24,\n    borderRadius: 12,\n    borderWidth: 1,\n    borderColor: colors.info,\n    marginBottom: 24,\n    width: '100%',\n    maxWidth: 400,\n    boxShadow: `0 0 20px ${colors.primary}40`\n  },\n  referralCodeLabel: {\n    fontSize: 16,\n    color: colors.text.secondary,\n    marginBottom: 12\n  },\n  referralCodeText: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    color: colors.text.inverse,\n    marginBottom: 12,\n    letterSpacing: 2\n  },\n  referralExpiry: {\n    fontSize: 14,\n    color: colors.text.tertiary,\n    textAlign: 'center'\n  },\n  referralMessage: {\n    fontSize: 16,\n    color: colors.text.secondary,\n    textAlign: 'center',\n    marginBottom: 32,\n    maxWidth: 400,\n    lineHeight: 24\n  },\n  exitButton: {\n    backgroundColor: colors.background.secondary,\n    paddingHorizontal: 24,\n    paddingVertical: 12,\n    borderRadius: 8,\n    borderWidth: 1,\n    borderColor: colors.primary\n  },\n  exitButtonText: {\n    color: colors.primary,\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  modalOverlay: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0,0,0,0.7)',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  confirmModal: {\n    backgroundColor: colors.background.primary,\n    padding: 24,\n    borderRadius: 12,\n    width: '90%',\n    maxWidth: 400\n  },\n  confirmTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: colors.text.primary,\n    marginBottom: 16\n  },\n  confirmText: {\n    fontSize: 16,\n    color: colors.text.secondary,\n    marginBottom: 24\n  },\n  confirmButtons: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    gap: 12\n  },\n  confirmButton: {\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    borderRadius: 6\n  },\n  cancelButton: {\n    backgroundColor: colors.background.secondary\n  },\n  confirmExitButton: {\n    backgroundColor: colors.primary\n  },\n  confirmButtonText: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    color: colors.text.inverse\n  }\n});","map":{"version":3,"names":["React","useState","useRef","useEffect","View","Text","TextInput","StyleSheet","TouchableOpacity","FlatList","ActivityIndicator","colors","sendMessage","GoogleSignIn","generateReferralCode","jsx","_jsx","jsxs","_jsxs","ChatUI","_ref","questionsBeforeLogin","showRefOffer","console","log","isDev","process","env","NODE_ENV","_useState","_useState2","_slicedToArray","messages","setMessages","_useState3","_useState4","input","setInput","_useState5","_useState6","loading","setLoading","_useState7","_useState8","connectionError","setConnectionError","_useState9","_useState10","questionCount","setQuestionCount","_useState11","_useState12","showLoginPrompt","setShowLoginPrompt","_useState13","_useState14","user","setUser","_useState15","_useState16","showExitConfirm","setShowExitConfirm","_useState17","_useState18","referralCode","setReferralCode","_useState19","_useState20","showRefModal","setShowRefModal","listRef","FALLBACK_QUESTIONS","text","options","getRandomFallbackQuestion","randomIndex","Math","floor","random","length","generateInitialReferral","_ref2","_asyncToGenerator","tempUserId","Date","now","code","error","apply","arguments","_objectSpread","uid","LOGIN_PROMPT_THRESHOLD","welcomeMessage","id","sender","isQuestion","checkConnection","_ref3","response","fetch","ok","Error","interval","setInterval","clearInterval","handleSendMessage","_ref4","trim","userMessage","prev","concat","_toConsumableArray","result","fallbackQuestion","botMessage","includes","newCount","errorMessage","message","handleQuickResponse","_ref5","errorOptions","_x","handleGoogleLogin","handleGoogleSignIn","_ref6","userData","alert","_x2","handleSkipSignIn","handleExit","handleConfirmExit","window","location","href","handleCancelExit","userExists","codeExists","style","styles","container","backgroundColor","background","primary","children","referralContainer","referralTitle","referralCodeBox","referralCodeLabel","referralCodeText","referralExpiry","referralMessage","exitButton","onPress","exitButtonText","modalOverlay","confirmModal","confirmTitle","confirmText","confirmButtons","confirmButton","cancelButton","confirmButtonText","color","confirmExitButton","shouldShow","then","catch","devBanner","devBannerText","ref","data","keyExtractor","item","toString","renderItem","_ref7","questionMessage","isReferralCode","messageText","userMessageText","botMessageText","questionText","referralText","optionsContainer","map","option","index","optionButton","disabled","optionText","onContentSizeChange","_listRef$current","current","scrollToEnd","messageList","onSignIn","onClose","inputContainer","value","onChangeText","placeholder","placeholderTextColor","tertiary","onSubmitEditing","editable","loader","create","flex","height","display","flexDirection","margin","padding","borderRadius","maxWidth","chatBubble","alignSelf","marginLeft","bot","marginRight","borderWidth","borderColor","fontSize","lineHeight","inverse","secondary","borderTopWidth","borderTopColor","alignItems","justifyContent","fontWeight","system","info","flexWrap","marginTop","gap","paddingHorizontal","paddingVertical","loginPrompt","loginText","marginBottom","textAlign","googleButton","googleButtonText","width","overflow","success","textShadow","boxShadow","letterSpacing","position","top","left","right","bottom"],"sources":["/Users/almorris/cursor-test/frontend/src/components/Chat/ChatUI.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { View, Text, TextInput, StyleSheet, TouchableOpacity, FlatList, ActivityIndicator } from 'react-native';\nimport { colors } from '../../utils/colors';\nimport { sendMessage } from '../../services/ai';\nimport GoogleSignIn from '../Auth/GoogleSignIn';\nimport { generateReferralCode } from '../../utils/referralUtils';\n\nexport default function ChatUI({ questionsBeforeLogin, showRefOffer }) {\n  console.log('ChatUI initialized with:', { questionsBeforeLogin, showRefOffer });\n  const isDev = process.env.NODE_ENV === 'development';\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [connectionError, setConnectionError] = useState(false);\n  const [questionCount, setQuestionCount] = useState(0);\n  const [showLoginPrompt, setShowLoginPrompt] = useState(false);\n  const [user, setUser] = useState(null);\n  const [showExitConfirm, setShowExitConfirm] = useState(false);\n  const [referralCode, setReferralCode] = useState(null);\n  const [showRefModal, setShowRefModal] = useState(false);\n  const listRef = useRef(null);\n\n  const FALLBACK_QUESTIONS = [\n    {\n      text: \"Let's explore a different angle - what motivates you the most?\",\n      options: [\"Personal growth\", \"Making a difference\", \"Success and achievement\"]\n    },\n    {\n      text: \"I'm curious to know - what area of your life would you most like to improve?\",\n      options: [\"Career development\", \"Personal relationships\", \"Health and wellness\"]\n    },\n    {\n      text: \"Here's an interesting question - what does success mean to you?\",\n      options: [\"Financial freedom\", \"Work-life balance\", \"Personal fulfillment\"]\n    },\n    {\n      text: \"Let's think about this differently - what's your biggest goal right now?\",\n      options: [\"Learning new skills\", \"Building better habits\", \"Growing professionally\"]\n    },\n    {\n      text: \"I'd love to understand - what brings you the most satisfaction?\",\n      options: [\"Helping others\", \"Achieving goals\", \"Learning and growing\"]\n    }\n  ];\n\n  const getRandomFallbackQuestion = () => {\n    const randomIndex = Math.floor(Math.random() * FALLBACK_QUESTIONS.length);\n    return FALLBACK_QUESTIONS[randomIndex];\n  };\n\n  // If showRefOffer is true, show the referral code interface immediately\n  useEffect(() => {\n    console.log('Processing showRefOffer:', showRefOffer);\n    if (showRefOffer) {\n      const generateInitialReferral = async () => {\n        try {\n          const tempUserId = 'temp-' + Date.now();\n          const code = await generateReferralCode(tempUserId);\n          console.log('Generated initial referral code:', code);\n          setReferralCode(code);\n          setShowRefModal(true);\n        } catch (error) {\n          console.error('Error generating initial referral code:', error);\n        }\n      };\n      generateInitialReferral();\n    }\n  }, [showRefOffer]);\n\n  // Debug logging for state changes\n  useEffect(() => {\n    console.log('State updated:', {\n      user: user ? { ...user, uid: user.uid } : null,\n      referralCode,\n      showLoginPrompt,\n      questionCount,\n      showExitConfirm,\n      showRefModal\n    });\n  }, [user, referralCode, showLoginPrompt, questionCount, showExitConfirm, showRefModal]);\n\n  // Configure when to show login prompt based on environment and URL params\n  const LOGIN_PROMPT_THRESHOLD = isDev ? \n    (questionsBeforeLogin || 5) : \n    5;\n\n  useEffect(() => {\n    // Add welcome message with initial question\n    const welcomeMessage = {\n      id: Date.now(),\n      text: `Welcome! I'm here to help you achieve your goals. What brings you here today?`,\n      sender: 'bot',\n      isQuestion: true\n    };\n    setMessages([welcomeMessage]);\n  }, []);\n\n  useEffect(() => {\n    if (isDev) {\n      console.log('Development mode: Chat initialized');\n    }\n  }, []);\n\n  // Watch question count and show login prompt at threshold\n  useEffect(() => {\n    if (questionCount >= LOGIN_PROMPT_THRESHOLD && !showLoginPrompt && !user) {\n      console.log(`Showing login prompt after ${questionCount} questions`);\n      setShowLoginPrompt(true);\n    }\n  }, [questionCount, showLoginPrompt, user]);\n\n  useEffect(() => {\n    // Check backend connection\n    const checkConnection = async () => {\n      try {\n        const response = await fetch('http://localhost:3000/api/health');\n        if (!response.ok) throw new Error('Backend unavailable');\n        setConnectionError(false);\n      } catch (error) {\n        console.error('Connection check failed:', error);\n        setConnectionError(true);\n      }\n    };\n    \n    checkConnection();\n    const interval = setInterval(checkConnection, 5000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const handleSendMessage = async () => {\n    if (!input.trim() || loading) return;\n    \n    try {\n      if (connectionError) {\n        throw new Error('Cannot connect to chat service');\n      }\n\n      setLoading(true);\n      const userMessage = { id: Date.now(), text: input, sender: 'user' };\n      setMessages(prev => [...prev, userMessage]);\n      setInput('');\n      \n      const result = await sendMessage(input);\n      \n      // Handle various error cases\n      if (!result) {\n        throw new Error('No response received from server');\n      }\n      \n      if (!result.text && !result.options) {\n        const fallbackQuestion = getRandomFallbackQuestion();\n        result.text = fallbackQuestion.text;\n        result.options = fallbackQuestion.options;\n      }\n      \n      const botMessage = {\n        id: Date.now(),\n        text: result.text || \"I'm having trouble understanding. Could you rephrase that?\",\n        sender: 'bot',\n        isQuestion: typeof result.text === 'string' && \n          (result.text.includes('?') || result.text.includes(\"I'd like to understand\")),\n        options: result.options || []\n      };\n      \n      setMessages(prev => [...prev, botMessage]);\n      \n      // Increment question count if this was a question\n      if (botMessage.isQuestion) {\n        const newCount = questionCount + 1;\n        setQuestionCount(newCount);\n      }\n    } catch (error) {\n      console.error('Chat error:', error);\n      // Handle specific error types\n      let errorMessage;\n      const fallbackQuestion = getRandomFallbackQuestion();\n      if (connectionError) {\n        errorMessage = 'Cannot connect to chat service. Please check your connection.';\n      } else if (error.message.includes('Empty response') || error.message.includes('No response')) {\n        errorMessage = fallbackQuestion.text;\n      } else {\n        errorMessage = `I apologize for the confusion. ${fallbackQuestion.text}`;\n      }\n      \n      setMessages(prev => [...prev, {\n        id: Date.now(),\n        text: errorMessage,\n        sender: 'bot',\n        isQuestion: true,\n        options: fallbackQuestion.options\n      }]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleQuickResponse = async (response) => {\n    if (loading) return;\n    \n    try {\n      setLoading(true);\n      const userMessage = { id: Date.now(), text: response, sender: 'user' };\n      setMessages(prev => [...prev, userMessage]);\n      \n      const result = await sendMessage(response);\n      \n      // Handle various error cases\n      if (!result) {\n        throw new Error('No response received from server');\n      }\n      \n      if (!result.text && !result.options) {\n        const fallbackQuestion = getRandomFallbackQuestion();\n        result.text = fallbackQuestion.text;\n        result.options = fallbackQuestion.options;\n      }\n      \n      const botMessage = {\n        id: Date.now(),\n        text: result.text || \"I understand. Tell me more about that.\",\n        sender: 'bot',\n        isQuestion: typeof result.text === 'string' && \n          (result.text.includes('?') || result.text.includes(\"I'd like to understand\")),\n        options: result.options || []\n      };\n      \n      setMessages(prev => [...prev, botMessage]);\n      \n      // Increment question count and check for login prompt\n      if (botMessage.isQuestion) {\n        const newCount = questionCount + 1;\n        setQuestionCount(newCount);\n      }\n    } catch (error) {\n      console.error('Quick response error:', error);\n      // Handle specific error types with engaging fallback questions\n      let errorMessage;\n      let errorOptions;\n      const fallbackQuestion = getRandomFallbackQuestion();\n      \n      if (connectionError) {\n        errorMessage = 'Cannot connect to chat service. Please check your connection.';\n        errorOptions = [];\n      } else if (error.message.includes('Empty response') || error.message.includes('No response')) {\n        errorMessage = fallbackQuestion.text;\n        errorOptions = fallbackQuestion.options;\n      } else {\n        errorMessage = `That's an interesting perspective. ${fallbackQuestion.text}`;\n        errorOptions = fallbackQuestion.options;\n      }\n      \n      setMessages(prev => [...prev, {\n        id: Date.now(),\n        text: errorMessage,\n        sender: 'bot',\n        isQuestion: true,\n        options: errorOptions\n      }]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleGoogleLogin = () => {\n    // TODO: Implement Google OAuth\n    console.log('Google login clicked');\n  };\n\n  const handleGoogleSignIn = async (userData) => {\n    console.log('Starting Google sign in process...', userData);\n    \n    try {\n      // First set the user to ensure we have the uid\n      setUser(userData);\n      console.log('User set:', userData);\n      \n      // Generate and show referral code\n      let code;\n      try {\n        code = await generateReferralCode(userData.uid);\n      } catch (error) {\n        console.error('Failed to generate referral code:', error);\n        setUser(null);\n        alert(\n          'Unable to complete sign-in process. Please try again later. ' +\n          'If the problem persists, please contact support.'\n        );\n        return;\n      }\n      \n      console.log('Generated referral code:', code);\n      \n      setReferralCode(code);\n      setShowLoginPrompt(false);\n      setShowRefModal(true);\n      \n      console.log('Updated state:', {\n        user: userData,\n        referralCode: code,\n        showLoginPrompt: false,\n        showRefModal: true\n      });\n    } catch (error) {\n      console.error('Error in sign-in process:', error);\n      setUser(null);\n      alert(\n        'Sign-in process failed. Please try again later. ' +\n        'If the problem persists, please contact support.'\n      );\n    }\n  };\n\n  const handleSkipSignIn = () => {\n    setShowLoginPrompt(false);\n    console.log('User skipped sign in');\n  };\n\n  const handleExit = () => {\n    setShowExitConfirm(true);\n  };\n\n  const handleConfirmExit = () => {\n    window.location.href = '/';  // Navigate to landing page\n  };\n\n  const handleCancelExit = () => {\n    setShowExitConfirm(false);\n  };\n\n  // If user is signed in, show referral code interface\n  if (referralCode && (user?.uid || showRefModal)) {\n    console.log('Rendering referral code interface:', { \n      user: user || 'no user', \n      referralCode: referralCode || 'no code',\n      userExists: !!user,\n      codeExists: !!referralCode,\n      showRefModal,\n      showRefOffer\n    });\n    return (\n      <View style={[styles.container, { backgroundColor: colors.background.primary }]}>\n        <View style={styles.referralContainer}>\n          <Text style={styles.referralTitle}>Thank You for Using HustleBot!</Text>\n          \n          <View style={styles.referralCodeBox}>\n            <Text style={styles.referralCodeLabel}>Your Exclusive Referral Code:</Text>\n            <Text style={styles.referralCodeText}>{referralCode}</Text>\n            <Text style={styles.referralExpiry}>\n              This code will expire in 48 hours and can only be used once.\n            </Text>\n          </View>\n          \n          <Text style={styles.referralMessage}>\n            Share this code with someone who would benefit from HustleBot's guidance.\n            Choose wisely - you can only invite one person!\n          </Text>\n          \n          <TouchableOpacity \n            style={styles.exitButton}\n            onPress={handleExit}\n          >\n            <Text style={styles.exitButtonText}>Return to Home</Text>\n          </TouchableOpacity>\n        </View>\n        \n        {showExitConfirm && (\n          <View style={styles.modalOverlay}>\n            <View style={styles.confirmModal}>\n              <Text style={styles.confirmTitle}>Are you sure?</Text>\n              <Text style={styles.confirmText}>\n                Make sure you've saved your referral code before leaving.\n              </Text>\n              <View style={styles.confirmButtons}>\n                <TouchableOpacity \n                  style={[styles.confirmButton, styles.cancelButton]}\n                  onPress={handleCancelExit}\n                >\n                  <Text style={[styles.confirmButtonText, { color: colors.text.primary }]}>Stay Here</Text>\n                </TouchableOpacity>\n                <TouchableOpacity \n                  style={[styles.confirmButton, styles.confirmExitButton]}\n                  onPress={handleConfirmExit}\n                >\n                  <Text style={styles.confirmButtonText}>Yes, Exit</Text>\n                </TouchableOpacity>\n              </View>\n            </View>\n          </View>\n        )}\n      </View>\n    );\n  }\n\n  // Add debug logging for render conditions\n  useEffect(() => {\n    console.log('Render state:', {\n      user: !!user,\n      referralCode: !!referralCode,\n      showLoginPrompt,\n      questionCount\n    });\n  }, [user, referralCode, showLoginPrompt, questionCount]);\n\n  useEffect(() => {\n    console.log('Referral display conditions updated:', {\n      user: user?.uid,\n      referralCode,\n      showRefModal,\n      showRefOffer,\n      shouldShow: (user?.uid && referralCode) || (showRefModal && referralCode)\n    });\n  }, [user, referralCode, showRefModal, showRefOffer]);\n\n  // Monitor state transitions for referral display\n  useEffect(() => {\n    if (user?.uid && !referralCode && !showRefModal) {\n      console.log('User signed in but no referral code yet, generating...');\n      generateReferralCode(user.uid)\n        .then(code => {\n          console.log('Generated referral code after state check:', code);\n          setReferralCode(code);\n          setShowRefModal(true);\n        })\n        .catch(error => {\n          console.error('Failed to generate referral code:', error);\n          alert('Failed to generate referral code. Please try again.');\n        });\n    }\n  }, [user, referralCode, showRefModal]);\n\n  return (\n    <View style={styles.container}>\n      {isDev && (\n        <View style={styles.devBanner}>\n          <Text style={styles.devBannerText}>DEVELOPMENT MODE</Text>\n        </View>\n      )}\n      <FlatList\n        ref={listRef}\n        data={messages}\n        keyExtractor={item => item.id.toString()}\n        renderItem={({ item }) => (\n          <View style={[\n            styles.message,\n            item.sender === 'user' ? styles.userMessage : styles.botMessage,\n            item.isQuestion && styles.questionMessage,\n            item.isReferralCode && styles.referralMessage\n          ]}>\n            <Text style={[\n              styles.messageText,\n              item.sender === 'user' ? styles.userMessageText : styles.botMessageText,\n              item.isQuestion && styles.questionText,\n              item.isReferralCode && styles.referralText\n            ]}>\n              {item.text}\n            </Text>\n            {item.options && item.sender === 'bot' && (\n              <View style={styles.optionsContainer}>\n                {item.options.map((option, index) => (\n                  <TouchableOpacity\n                    key={index}\n                    style={styles.optionButton}\n                    onPress={() => handleQuickResponse(option)}\n                    disabled={loading}\n                  >\n                    <Text style={styles.optionText}>{option}</Text>\n                  </TouchableOpacity>\n                ))}\n              </View>\n            )}\n          </View>\n        )}\n        onContentSizeChange={() => listRef.current?.scrollToEnd()}\n        style={styles.messageList}\n      />\n      \n      {showLoginPrompt && (\n        <GoogleSignIn\n          onSignIn={handleGoogleSignIn}\n          onClose={handleSkipSignIn}\n        />\n      )}\n\n      <View style={styles.inputContainer}>\n        <TextInput\n          style={styles.input}\n          value={input}\n          onChangeText={setInput}\n          placeholder=\"Type a message...\"\n          placeholderTextColor={colors.text.tertiary}\n          onSubmitEditing={handleSendMessage}\n          editable={!loading}\n        />\n        {loading && (\n          <ActivityIndicator \n            style={styles.loader} \n            color={colors.primary} \n          />\n        )}\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: colors.background.primary,\n    height: '100vh',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  message: {\n    margin: 10,\n    padding: 10,\n    borderRadius: 20,\n    maxWidth: '80%'\n  },\n  userMessage: {\n    backgroundColor: colors.chatBubble.user,\n    alignSelf: 'flex-end',\n    marginLeft: '20%'\n  },\n  botMessage: {\n    backgroundColor: colors.chatBubble.bot,\n    alignSelf: 'flex-start',\n    marginRight: '20%',\n    borderWidth: 1,\n    borderColor: colors.background.tertiary\n  },\n  messageText: {\n    fontSize: 16,\n    lineHeight: 20\n  },\n  userMessageText: {\n    color: colors.text.inverse\n  },\n  botMessageText: {\n    color: colors.text.secondary\n  },\n  inputContainer: {\n    padding: 10,\n    borderTopWidth: 1,\n    borderTopColor: colors.background.tertiary,\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  input: {\n    flex: 1,\n    backgroundColor: colors.background.secondary,\n    padding: 12,\n    borderRadius: 20,\n    fontSize: 16,\n    color: colors.text.primary\n  },\n  loader: {\n    marginLeft: 10\n  },\n  devBanner: {\n    backgroundColor: colors.background.tertiary,\n    padding: 10,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  devBannerText: {\n    color: colors.text.secondary,\n    fontWeight: 'bold'\n  },\n  questionMessage: {\n    backgroundColor: colors.chatBubble.system,\n    borderWidth: 1,\n    borderColor: colors.info\n  },\n  questionText: {\n    fontWeight: '500',\n    color: colors.text.secondary\n  },\n  optionsContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'flex-start',\n    marginTop: 10,\n    gap: 8\n  },\n  optionButton: {\n    backgroundColor: colors.background.secondary,\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n    borderRadius: 16,\n    borderWidth: 1,\n    borderColor: colors.primary\n  },\n  optionText: {\n    color: colors.text.primary,\n    fontSize: 14\n  },\n  loginPrompt: {\n    backgroundColor: colors.background.secondary,\n    padding: 16,\n    margin: 16,\n    borderRadius: 8,\n    alignItems: 'center'\n  },\n  loginText: {\n    color: colors.text.primary,\n    marginBottom: 12,\n    textAlign: 'center'\n  },\n  googleButton: {\n    backgroundColor: '#4285F4',\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n    borderRadius: 4\n  },\n  googleButtonText: {\n    color: colors.text.inverse,\n    fontWeight: 'bold'\n  },\n  messageList: {\n    flex: 1,\n    width: '100%',\n    overflow: 'auto'\n  },\n  referralMessage: {\n    backgroundColor: colors.success,\n    borderWidth: 0,\n    padding: 20\n  },\n  referralText: {\n    color: colors.text.inverse,\n    fontSize: 16,\n    lineHeight: 24,\n    textAlign: 'center'\n  },\n  referralContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 24,\n    backgroundColor: colors.background.primary\n  },\n  referralTitle: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    color: colors.text.primary,\n    marginBottom: 32,\n    textAlign: 'center',\n    textShadow: `0 0 10px ${colors.primary}40`\n  },\n  referralCodeBox: {\n    backgroundColor: colors.background.tertiary,\n    padding: 24,\n    borderRadius: 12,\n    borderWidth: 1,\n    borderColor: colors.info,\n    marginBottom: 24,\n    width: '100%',\n    maxWidth: 400,\n    boxShadow: `0 0 20px ${colors.primary}40`\n  },\n  referralCodeLabel: {\n    fontSize: 16,\n    color: colors.text.secondary,\n    marginBottom: 12\n  },\n  referralCodeText: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    color: colors.text.inverse,\n    marginBottom: 12,\n    letterSpacing: 2\n  },\n  referralExpiry: {\n    fontSize: 14,\n    color: colors.text.tertiary,\n    textAlign: 'center'\n  },\n  referralMessage: {\n    fontSize: 16,\n    color: colors.text.secondary,\n    textAlign: 'center',\n    marginBottom: 32,\n    maxWidth: 400,\n    lineHeight: 24\n  },\n  exitButton: {\n    backgroundColor: colors.background.secondary,\n    paddingHorizontal: 24,\n    paddingVertical: 12,\n    borderRadius: 8,\n    borderWidth: 1,\n    borderColor: colors.primary\n  },\n  exitButtonText: {\n    color: colors.primary,\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  modalOverlay: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0,0,0,0.7)',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  confirmModal: {\n    backgroundColor: colors.background.primary,\n    padding: 24,\n    borderRadius: 12,\n    width: '90%',\n    maxWidth: 400\n  },\n  confirmTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: colors.text.primary,\n    marginBottom: 16\n  },\n  confirmText: {\n    fontSize: 16,\n    color: colors.text.secondary,\n    marginBottom: 24\n  },\n  confirmButtons: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    gap: 12\n  },\n  confirmButton: {\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    borderRadius: 6\n  },\n  cancelButton: {\n    backgroundColor: colors.background.secondary\n  },\n  confirmExitButton: {\n    backgroundColor: colors.primary\n  },\n  confirmButtonText: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    color: colors.text.inverse\n  }\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}