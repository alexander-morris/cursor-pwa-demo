{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { getFirestore, collection, addDoc, serverTimestamp } from 'firebase/firestore';\nimport { getApp } from 'firebase/app';\nexport var generateReferralCode = function () {\n  var _ref = _asyncToGenerator(function* (userId) {\n    try {\n      console.log('Generating referral code for user:', userId);\n      var code = generateUniqueCode();\n      console.log('Generated unique code:', code);\n      try {\n        var app = getApp();\n        var db = getFirestore(app);\n        var docData = {\n          code: code,\n          createdBy: userId,\n          createdAt: serverTimestamp(),\n          expiresAt: new Date(Date.now() + 48 * 60 * 60 * 1000),\n          used: false,\n          usedBy: null\n        };\n        addDoc(collection(db, 'referralCodes'), docData).then(function () {\n          return console.log('Successfully saved referral code to Firestore');\n        }).catch(function (error) {\n          return console.error('Failed to save to Firestore:', error);\n        });\n      } catch (error) {\n        console.error('Firestore setup error:', error);\n      }\n      return code;\n    } catch (error) {\n      console.error('Error generating referral code:', error);\n      var tempCode = generateUniqueCode();\n      console.log('Returning temporary code due to error:', tempCode);\n      return tempCode;\n    }\n  });\n  return function generateReferralCode(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport function generateUniqueCode() {\n  var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n  var segments = 3;\n  var segmentLength = 4;\n  var code = '';\n  for (var i = 0; i < segments; i++) {\n    for (var j = 0; j < segmentLength; j++) {\n      code += chars.charAt(Math.floor(Math.random() * chars.length));\n    }\n    if (i < segments - 1) code += '-';\n  }\n  return code;\n}","map":{"version":3,"names":["getFirestore","collection","addDoc","serverTimestamp","getApp","generateReferralCode","_ref","_asyncToGenerator","userId","console","log","code","generateUniqueCode","app","db","docData","createdBy","createdAt","expiresAt","Date","now","used","usedBy","then","catch","error","tempCode","_x","apply","arguments","chars","segments","segmentLength","i","j","charAt","Math","floor","random","length"],"sources":["/Users/almorris/cursor-test/frontend/src/utils/referralUtils.js"],"sourcesContent":["import { getFirestore, collection, addDoc, serverTimestamp } from 'firebase/firestore';\nimport { getApp } from 'firebase/app';\n\nexport const generateReferralCode = async (userId) => {\n  try {\n    console.log('Generating referral code for user:', userId);\n    \n    // Generate a unique code\n    const code = generateUniqueCode();\n    console.log('Generated unique code:', code);\n    \n    // Try to save to Firestore but don't block on failure\n    try {\n      const app = getApp();\n      const db = getFirestore(app);\n      \n      const docData = {\n        code,\n        createdBy: userId,\n        createdAt: serverTimestamp(),\n        expiresAt: new Date(Date.now() + 48 * 60 * 60 * 1000),\n        used: false,\n        usedBy: null\n      };\n      \n      // Attempt to save but don't await\n      addDoc(collection(db, 'referralCodes'), docData)\n        .then(() => console.log('Successfully saved referral code to Firestore'))\n        .catch(error => console.error('Failed to save to Firestore:', error));\n    } catch (error) {\n      console.error('Firestore setup error:', error);\n    }\n    \n    return code;\n  } catch (error) {\n    console.error('Error generating referral code:', error);\n    const tempCode = generateUniqueCode();\n    console.log('Returning temporary code due to error:', tempCode);\n    return tempCode;\n  }\n};\n\nexport function generateUniqueCode() {\n  // Generate a code format: XXXX-XXXX-XXXX\n  const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n  const segments = 3;\n  const segmentLength = 4;\n  \n  let code = '';\n  for (let i = 0; i < segments; i++) {\n    for (let j = 0; j < segmentLength; j++) {\n      code += chars.charAt(Math.floor(Math.random() * chars.length));\n    }\n    if (i < segments - 1) code += '-';\n  }\n  \n  return code;\n} "],"mappings":";AAAA,SAASA,YAAY,EAAEC,UAAU,EAAEC,MAAM,EAAEC,eAAe,QAAQ,oBAAoB;AACtF,SAASC,MAAM,QAAQ,cAAc;AAErC,OAAO,IAAMC,oBAAoB;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,WAAOC,MAAM,EAAK;IACpD,IAAI;MACFC,OAAO,CAACC,GAAG,CAAC,oCAAoC,EAAEF,MAAM,CAAC;MAGzD,IAAMG,IAAI,GAAGC,kBAAkB,CAAC,CAAC;MACjCH,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEC,IAAI,CAAC;MAG3C,IAAI;QACF,IAAME,GAAG,GAAGT,MAAM,CAAC,CAAC;QACpB,IAAMU,EAAE,GAAGd,YAAY,CAACa,GAAG,CAAC;QAE5B,IAAME,OAAO,GAAG;UACdJ,IAAI,EAAJA,IAAI;UACJK,SAAS,EAAER,MAAM;UACjBS,SAAS,EAAEd,eAAe,CAAC,CAAC;UAC5Be,SAAS,EAAE,IAAIC,IAAI,CAACA,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;UACrDC,IAAI,EAAE,KAAK;UACXC,MAAM,EAAE;QACV,CAAC;QAGDpB,MAAM,CAACD,UAAU,CAACa,EAAE,EAAE,eAAe,CAAC,EAAEC,OAAO,CAAC,CAC7CQ,IAAI,CAAC;UAAA,OAAMd,OAAO,CAACC,GAAG,CAAC,+CAA+C,CAAC;QAAA,EAAC,CACxEc,KAAK,CAAC,UAAAC,KAAK;UAAA,OAAIhB,OAAO,CAACgB,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;QAAA,EAAC;MACzE,CAAC,CAAC,OAAOA,KAAK,EAAE;QACdhB,OAAO,CAACgB,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;MAEA,OAAOd,IAAI;IACb,CAAC,CAAC,OAAOc,KAAK,EAAE;MACdhB,OAAO,CAACgB,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACvD,IAAMC,QAAQ,GAAGd,kBAAkB,CAAC,CAAC;MACrCH,OAAO,CAACC,GAAG,CAAC,wCAAwC,EAAEgB,QAAQ,CAAC;MAC/D,OAAOA,QAAQ;IACjB;EACF,CAAC;EAAA,gBArCYrB,oBAAoBA,CAAAsB,EAAA;IAAA,OAAArB,IAAA,CAAAsB,KAAA,OAAAC,SAAA;EAAA;AAAA,GAqChC;AAED,OAAO,SAASjB,kBAAkBA,CAAA,EAAG;EAEnC,IAAMkB,KAAK,GAAG,sCAAsC;EACpD,IAAMC,QAAQ,GAAG,CAAC;EAClB,IAAMC,aAAa,GAAG,CAAC;EAEvB,IAAIrB,IAAI,GAAG,EAAE;EACb,KAAK,IAAIsB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,QAAQ,EAAEE,CAAC,EAAE,EAAE;IACjC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,aAAa,EAAEE,CAAC,EAAE,EAAE;MACtCvB,IAAI,IAAImB,KAAK,CAACK,MAAM,CAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGR,KAAK,CAACS,MAAM,CAAC,CAAC;IAChE;IACA,IAAIN,CAAC,GAAGF,QAAQ,GAAG,CAAC,EAAEpB,IAAI,IAAI,GAAG;EACnC;EAEA,OAAOA,IAAI;AACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}