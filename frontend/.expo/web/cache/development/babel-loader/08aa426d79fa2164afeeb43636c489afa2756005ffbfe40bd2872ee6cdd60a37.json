{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { colors } from \"../../utils/colors\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function GoogleSignIn(_ref) {\n  var onSignIn = _ref.onSignIn,\n    onClose = _ref.onClose;\n  var handleSignIn = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        console.log('Initiating Google sign in...');\n        onSignIn({\n          name: 'Test User',\n          email: 'test@example.com'\n        });\n      } catch (error) {\n        console.error('Google sign in error:', error);\n      }\n    });\n    return function handleSignIn() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsx(View, {\n    style: styles.overlay,\n    children: _jsxs(View, {\n      style: styles.modal,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"Save Your Progress\"\n      }), _jsx(Text, {\n        style: styles.description,\n        children: \"Sign in with Google to save your conversation history and continue your journey.\"\n      }), _jsx(TouchableOpacity, {\n        style: styles.googleButton,\n        onPress: handleSignIn,\n        children: _jsx(Text, {\n          style: styles.googleButtonText,\n          children: \"Sign in with Google\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.skipButton,\n        onPress: onClose,\n        children: _jsx(Text, {\n          style: styles.skipButtonText,\n          children: \"Continue without signing in\"\n        })\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  overlay: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0,0,0,0.7)',\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 1000\n  },\n  modal: {\n    backgroundColor: colors.background.secondary,\n    padding: 24,\n    borderRadius: 12,\n    width: '90%',\n    maxWidth: 400,\n    alignItems: 'center'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: colors.text.primary,\n    marginBottom: 16\n  },\n  description: {\n    fontSize: 16,\n    color: colors.text.secondary,\n    textAlign: 'center',\n    marginBottom: 24\n  },\n  googleButton: {\n    backgroundColor: '#4285F4',\n    paddingHorizontal: 24,\n    paddingVertical: 12,\n    borderRadius: 6,\n    width: '100%',\n    alignItems: 'center',\n    marginBottom: 16\n  },\n  googleButtonText: {\n    color: colors.text.inverse,\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  skipButton: {\n    paddingVertical: 12\n  },\n  skipButtonText: {\n    color: colors.text.tertiary,\n    fontSize: 14\n  }\n});","map":{"version":3,"names":["React","View","Text","TouchableOpacity","StyleSheet","colors","jsx","_jsx","jsxs","_jsxs","GoogleSignIn","_ref","onSignIn","onClose","handleSignIn","_ref2","_asyncToGenerator","console","log","name","email","error","apply","arguments","style","styles","overlay","children","modal","title","description","googleButton","onPress","googleButtonText","skipButton","skipButtonText","create","position","top","left","right","bottom","backgroundColor","justifyContent","alignItems","zIndex","background","secondary","padding","borderRadius","width","maxWidth","fontSize","fontWeight","color","text","primary","marginBottom","textAlign","paddingHorizontal","paddingVertical","inverse","tertiary"],"sources":["/Users/almorris/cursor-test/frontend/src/components/Auth/GoogleSignIn.js"],"sourcesContent":["import React from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet } from 'react-native';\nimport { colors } from '../../utils/colors';\n\nexport default function GoogleSignIn({ onSignIn, onClose }) {\n  const handleSignIn = async () => {\n    try {\n      // TODO: Implement actual Google OAuth\n      console.log('Initiating Google sign in...');\n      // For now, just simulate a successful sign in\n      onSignIn({ \n        name: 'Test User',\n        email: 'test@example.com'\n      });\n    } catch (error) {\n      console.error('Google sign in error:', error);\n    }\n  };\n\n  return (\n    <View style={styles.overlay}>\n      <View style={styles.modal}>\n        <Text style={styles.title}>Save Your Progress</Text>\n        <Text style={styles.description}>\n          Sign in with Google to save your conversation history and continue your journey.\n        </Text>\n        \n        <TouchableOpacity \n          style={styles.googleButton}\n          onPress={handleSignIn}\n        >\n          <Text style={styles.googleButtonText}>Sign in with Google</Text>\n        </TouchableOpacity>\n        \n        <TouchableOpacity \n          style={styles.skipButton}\n          onPress={onClose}\n        >\n          <Text style={styles.skipButtonText}>Continue without signing in</Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  overlay: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0,0,0,0.7)',\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 1000\n  },\n  modal: {\n    backgroundColor: colors.background.secondary,\n    padding: 24,\n    borderRadius: 12,\n    width: '90%',\n    maxWidth: 400,\n    alignItems: 'center'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: colors.text.primary,\n    marginBottom: 16\n  },\n  description: {\n    fontSize: 16,\n    color: colors.text.secondary,\n    textAlign: 'center',\n    marginBottom: 24\n  },\n  googleButton: {\n    backgroundColor: '#4285F4',\n    paddingHorizontal: 24,\n    paddingVertical: 12,\n    borderRadius: 6,\n    width: '100%',\n    alignItems: 'center',\n    marginBottom: 16\n  },\n  googleButtonText: {\n    color: colors.text.inverse,\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  skipButton: {\n    paddingVertical: 12\n  },\n  skipButtonText: {\n    color: colors.text.tertiary,\n    fontSize: 14\n  }\n}); "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}