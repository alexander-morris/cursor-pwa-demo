{"ast":null,"code":"export var getInviteFromURL = function getInviteFromURL() {\n  try {\n    if (typeof window === 'undefined') return null;\n    var urlParams = new URLSearchParams(window.location.search);\n    var inviteCode = urlParams.get('invite') || urlParams.get('ref');\n    if (!inviteCode && window.location.hash) {\n      var hashParams = new URLSearchParams(window.location.hash.substring(1));\n      return hashParams.get('invite') || hashParams.get('ref');\n    }\n    return inviteCode;\n  } catch (error) {\n    console.error('Error parsing URL parameters:', error);\n    return null;\n  }\n};\nexport var clearInviteFromURL = function clearInviteFromURL() {\n  try {\n    if (typeof window === 'undefined') return;\n    var url = new URL(window.location.href);\n    url.searchParams.delete('invite');\n    url.searchParams.delete('ref');\n    window.history.replaceState({}, '', url.toString());\n  } catch (error) {\n    console.error('Error clearing URL parameters:', error);\n  }\n};","map":{"version":3,"names":["getInviteFromURL","window","urlParams","URLSearchParams","location","search","inviteCode","get","hash","hashParams","substring","error","console","clearInviteFromURL","url","URL","href","searchParams","delete","history","replaceState","toString"],"sources":["/Users/almorris/cursor-test/frontend/src/utils/urlUtils.js"],"sourcesContent":["export const getInviteFromURL = () => {\n  try {\n    // Check if we're in a web environment\n    if (typeof window === 'undefined') return null;\n\n    const urlParams = new URLSearchParams(window.location.search);\n    const inviteCode = urlParams.get('invite') || urlParams.get('ref');\n    \n    // Also check for hash parameters\n    if (!inviteCode && window.location.hash) {\n      const hashParams = new URLSearchParams(window.location.hash.substring(1));\n      return hashParams.get('invite') || hashParams.get('ref');\n    }\n    \n    return inviteCode;\n  } catch (error) {\n    console.error('Error parsing URL parameters:', error);\n    return null;\n  }\n};\n\nexport const clearInviteFromURL = () => {\n  try {\n    if (typeof window === 'undefined') return;\n\n    const url = new URL(window.location.href);\n    url.searchParams.delete('invite');\n    url.searchParams.delete('ref');\n    \n    // Update URL without refreshing the page\n    window.history.replaceState({}, '', url.toString());\n  } catch (error) {\n    console.error('Error clearing URL parameters:', error);\n  }\n}; "],"mappings":"AAAA,OAAO,IAAMA,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAA,EAAS;EACpC,IAAI;IAEF,IAAI,OAAOC,MAAM,KAAK,WAAW,EAAE,OAAO,IAAI;IAE9C,IAAMC,SAAS,GAAG,IAAIC,eAAe,CAACF,MAAM,CAACG,QAAQ,CAACC,MAAM,CAAC;IAC7D,IAAMC,UAAU,GAAGJ,SAAS,CAACK,GAAG,CAAC,QAAQ,CAAC,IAAIL,SAAS,CAACK,GAAG,CAAC,KAAK,CAAC;IAGlE,IAAI,CAACD,UAAU,IAAIL,MAAM,CAACG,QAAQ,CAACI,IAAI,EAAE;MACvC,IAAMC,UAAU,GAAG,IAAIN,eAAe,CAACF,MAAM,CAACG,QAAQ,CAACI,IAAI,CAACE,SAAS,CAAC,CAAC,CAAC,CAAC;MACzE,OAAOD,UAAU,CAACF,GAAG,CAAC,QAAQ,CAAC,IAAIE,UAAU,CAACF,GAAG,CAAC,KAAK,CAAC;IAC1D;IAEA,OAAOD,UAAU;EACnB,CAAC,CAAC,OAAOK,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACrD,OAAO,IAAI;EACb;AACF,CAAC;AAED,OAAO,IAAME,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAA,EAAS;EACtC,IAAI;IACF,IAAI,OAAOZ,MAAM,KAAK,WAAW,EAAE;IAEnC,IAAMa,GAAG,GAAG,IAAIC,GAAG,CAACd,MAAM,CAACG,QAAQ,CAACY,IAAI,CAAC;IACzCF,GAAG,CAACG,YAAY,CAACC,MAAM,CAAC,QAAQ,CAAC;IACjCJ,GAAG,CAACG,YAAY,CAACC,MAAM,CAAC,KAAK,CAAC;IAG9BjB,MAAM,CAACkB,OAAO,CAACC,YAAY,CAAC,CAAC,CAAC,EAAE,EAAE,EAAEN,GAAG,CAACO,QAAQ,CAAC,CAAC,CAAC;EACrD,CAAC,CAAC,OAAOV,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;EACxD;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}