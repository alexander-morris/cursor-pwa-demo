{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { getFirestore, collection, addDoc, serverTimestamp } from 'firebase/firestore';\nimport { getApp } from 'firebase/app';\nexport var generateReferralCode = function () {\n  var _ref = _asyncToGenerator(function* (userId) {\n    try {\n      console.log('Generating referral code for user:', userId);\n      var app = getApp();\n      var db = getFirestore(app);\n      var code = generateUniqueCode();\n      console.log('Generated unique code:', code);\n      try {\n        var testRef = collection(db, 'referralCodes');\n        if (!testRef) {\n          throw new Error('Database connection not established');\n        }\n      } catch (error) {\n        console.error('Database connection error:', error);\n        throw new Error('Unable to connect to database');\n      }\n      try {\n        yield addDoc(collection(db, 'referralCodes'), {\n          code: code,\n          createdBy: userId,\n          createdAt: serverTimestamp(),\n          expiresAt: new Date(Date.now() + 48 * 60 * 60 * 1000),\n          used: false,\n          usedBy: null\n        });\n      } catch (error) {\n        console.error('Error saving referral code:', error);\n        throw new Error('Failed to save referral code');\n      }\n      return code;\n    } catch (error) {\n      console.error('Error generating referral code:', error);\n      throw new Error(error.message === 'Failed to save referral code' ? error.message : 'Unable to generate referral code');\n    }\n  });\n  return function generateReferralCode(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nfunction generateUniqueCode() {\n  var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n  var segments = 3;\n  var segmentLength = 4;\n  var code = '';\n  for (var i = 0; i < segments; i++) {\n    for (var j = 0; j < segmentLength; j++) {\n      code += chars.charAt(Math.floor(Math.random() * chars.length));\n    }\n    if (i < segments - 1) code += '-';\n  }\n  return code;\n}","map":{"version":3,"names":["getFirestore","collection","addDoc","serverTimestamp","getApp","generateReferralCode","_ref","_asyncToGenerator","userId","console","log","app","db","code","generateUniqueCode","testRef","Error","error","createdBy","createdAt","expiresAt","Date","now","used","usedBy","message","_x","apply","arguments","chars","segments","segmentLength","i","j","charAt","Math","floor","random","length"],"sources":["/Users/almorris/cursor-test/frontend/src/utils/referralUtils.js"],"sourcesContent":["import { getFirestore, collection, addDoc, serverTimestamp } from 'firebase/firestore';\nimport { getApp } from 'firebase/app';\n\nexport const generateReferralCode = async (userId) => {\n  try {\n    console.log('Generating referral code for user:', userId);\n    const app = getApp();\n    const db = getFirestore(app);\n    \n    // Generate a unique code\n    const code = generateUniqueCode();\n    console.log('Generated unique code:', code);\n    \n    // Verify database connection before writing\n    try {\n      const testRef = collection(db, 'referralCodes');\n      if (!testRef) {\n        throw new Error('Database connection not established');\n      }\n    } catch (error) {\n      console.error('Database connection error:', error);\n      throw new Error('Unable to connect to database');\n    }\n    \n    // Save to Firestore with expiration\n    try {\n      await addDoc(collection(db, 'referralCodes'), {\n        code,\n        createdBy: userId,\n        createdAt: serverTimestamp(),\n        expiresAt: new Date(Date.now() + 48 * 60 * 60 * 1000),\n        used: false,\n        usedBy: null\n      });\n    } catch (error) {\n      console.error('Error saving referral code:', error);\n      throw new Error('Failed to save referral code');\n    }\n    \n    return code;\n  } catch (error) {\n    console.error('Error generating referral code:', error);\n    throw new Error(\n      error.message === 'Failed to save referral code' \n        ? error.message \n        : 'Unable to generate referral code'\n    );\n  }\n};\n\nfunction generateUniqueCode() {\n  // Generate a code format: XXXX-XXXX-XXXX\n  const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n  const segments = 3;\n  const segmentLength = 4;\n  \n  let code = '';\n  for (let i = 0; i < segments; i++) {\n    for (let j = 0; j < segmentLength; j++) {\n      code += chars.charAt(Math.floor(Math.random() * chars.length));\n    }\n    if (i < segments - 1) code += '-';\n  }\n  \n  return code;\n} "],"mappings":";AAAA,SAASA,YAAY,EAAEC,UAAU,EAAEC,MAAM,EAAEC,eAAe,QAAQ,oBAAoB;AACtF,SAASC,MAAM,QAAQ,cAAc;AAErC,OAAO,IAAMC,oBAAoB;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,WAAOC,MAAM,EAAK;IACpD,IAAI;MACFC,OAAO,CAACC,GAAG,CAAC,oCAAoC,EAAEF,MAAM,CAAC;MACzD,IAAMG,GAAG,GAAGP,MAAM,CAAC,CAAC;MACpB,IAAMQ,EAAE,GAAGZ,YAAY,CAACW,GAAG,CAAC;MAG5B,IAAME,IAAI,GAAGC,kBAAkB,CAAC,CAAC;MACjCL,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEG,IAAI,CAAC;MAG3C,IAAI;QACF,IAAME,OAAO,GAAGd,UAAU,CAACW,EAAE,EAAE,eAAe,CAAC;QAC/C,IAAI,CAACG,OAAO,EAAE;UACZ,MAAM,IAAIC,KAAK,CAAC,qCAAqC,CAAC;QACxD;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdR,OAAO,CAACQ,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;QAClD,MAAM,IAAID,KAAK,CAAC,+BAA+B,CAAC;MAClD;MAGA,IAAI;QACF,MAAMd,MAAM,CAACD,UAAU,CAACW,EAAE,EAAE,eAAe,CAAC,EAAE;UAC5CC,IAAI,EAAJA,IAAI;UACJK,SAAS,EAAEV,MAAM;UACjBW,SAAS,EAAEhB,eAAe,CAAC,CAAC;UAC5BiB,SAAS,EAAE,IAAIC,IAAI,CAACA,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;UACrDC,IAAI,EAAE,KAAK;UACXC,MAAM,EAAE;QACV,CAAC,CAAC;MACJ,CAAC,CAAC,OAAOP,KAAK,EAAE;QACdR,OAAO,CAACQ,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;QACnD,MAAM,IAAID,KAAK,CAAC,8BAA8B,CAAC;MACjD;MAEA,OAAOH,IAAI;IACb,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdR,OAAO,CAACQ,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACvD,MAAM,IAAID,KAAK,CACbC,KAAK,CAACQ,OAAO,KAAK,8BAA8B,GAC5CR,KAAK,CAACQ,OAAO,GACb,kCACN,CAAC;IACH;EACF,CAAC;EAAA,gBA7CYpB,oBAAoBA,CAAAqB,EAAA;IAAA,OAAApB,IAAA,CAAAqB,KAAA,OAAAC,SAAA;EAAA;AAAA,GA6ChC;AAED,SAASd,kBAAkBA,CAAA,EAAG;EAE5B,IAAMe,KAAK,GAAG,sCAAsC;EACpD,IAAMC,QAAQ,GAAG,CAAC;EAClB,IAAMC,aAAa,GAAG,CAAC;EAEvB,IAAIlB,IAAI,GAAG,EAAE;EACb,KAAK,IAAImB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,QAAQ,EAAEE,CAAC,EAAE,EAAE;IACjC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,aAAa,EAAEE,CAAC,EAAE,EAAE;MACtCpB,IAAI,IAAIgB,KAAK,CAACK,MAAM,CAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGR,KAAK,CAACS,MAAM,CAAC,CAAC;IAChE;IACA,IAAIN,CAAC,GAAGF,QAAQ,GAAG,CAAC,EAAEjB,IAAI,IAAI,GAAG;EACnC;EAEA,OAAOA,IAAI;AACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}