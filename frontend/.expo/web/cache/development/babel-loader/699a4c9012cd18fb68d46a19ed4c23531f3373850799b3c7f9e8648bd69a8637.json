{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { GoogleAuthProvider, signInWithPopup, signInWithRedirect, getRedirectResult } from 'firebase/auth';\nimport { initializeApp } from 'firebase/app';\nimport { getAuth } from 'firebase/auth';\nimport env from \"../config/environment\";\nvar firebaseConfig = env.firebase;\nvar app = initializeApp(firebaseConfig);\nvar auth = getAuth(app);\nexport var signInWithGoogle = function () {\n  var _ref = _asyncToGenerator(function* () {\n    try {\n      var _provider = new GoogleAuthProvider();\n      _provider.setCustomParameters({\n        prompt: 'select_account',\n        redirect_uri: window.location.origin,\n        auth_type: 'popup'\n      });\n      auth.useDeviceLanguage();\n      var result = yield signInWithPopup(auth, _provider);\n      return {\n        name: result.user.displayName,\n        email: result.user.email,\n        uid: result.user.uid\n      };\n    } catch (error) {\n      console.error('Google sign in error:', error);\n      if (error.code === 'auth/configuration-not-found') {\n        throw new Error('Google Sign In is not properly configured. Please try again later.');\n      } else if (error.code === 'auth/popup-blocked') {\n        try {\n          yield signInWithRedirect(auth, provider);\n          return null;\n        } catch (redirectError) {\n          throw new Error('Please allow popups for this website or try again later.');\n        }\n      } else {\n        throw new Error('Failed to sign in with Google. Please try again.');\n      }\n    }\n  });\n  return function signInWithGoogle() {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var handleRedirectResult = function () {\n  var _ref2 = _asyncToGenerator(function* () {\n    try {\n      var result = yield getRedirectResult(auth);\n      if (result) {\n        return {\n          name: result.user.displayName,\n          email: result.user.email,\n          uid: result.user.uid\n        };\n      }\n      return null;\n    } catch (error) {\n      console.error('Redirect result error:', error);\n      return null;\n    }\n  });\n  return function handleRedirectResult() {\n    return _ref2.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["GoogleAuthProvider","signInWithPopup","signInWithRedirect","getRedirectResult","initializeApp","getAuth","env","firebaseConfig","firebase","app","auth","signInWithGoogle","_ref","_asyncToGenerator","provider","setCustomParameters","prompt","redirect_uri","window","location","origin","auth_type","useDeviceLanguage","result","name","user","displayName","email","uid","error","console","code","Error","redirectError","apply","arguments","handleRedirectResult","_ref2"],"sources":["/Users/almorris/cursor-test/frontend/src/services/auth.js"],"sourcesContent":["import { GoogleAuthProvider, signInWithPopup, signInWithRedirect, getRedirectResult } from 'firebase/auth';\nimport { initializeApp } from 'firebase/app';\nimport { getAuth } from 'firebase/auth';\nimport env from '../config/environment';\n\nconst firebaseConfig = env.firebase;\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app);\n\nexport const signInWithGoogle = async () => {\n  try {\n    const provider = new GoogleAuthProvider();\n    provider.setCustomParameters({\n      prompt: 'select_account',\n      redirect_uri: window.location.origin,\n      auth_type: 'popup'\n    });\n\n    // Configure auth instance\n    auth.useDeviceLanguage();\n\n    const result = await signInWithPopup(auth, provider);\n    return {\n      name: result.user.displayName,\n      email: result.user.email,\n      uid: result.user.uid\n    };\n  } catch (error) {\n    console.error('Google sign in error:', error);\n    if (error.code === 'auth/configuration-not-found') {\n      throw new Error('Google Sign In is not properly configured. Please try again later.');\n    } else if (error.code === 'auth/popup-blocked') {\n      // Try redirect method if popup is blocked\n      try {\n        await signInWithRedirect(auth, provider);\n        return null; // User will be redirected\n      } catch (redirectError) {\n        throw new Error('Please allow popups for this website or try again later.');\n      }\n    } else {\n      throw new Error('Failed to sign in with Google. Please try again.');\n    }\n  }\n};\n\n// Add handler for redirect result\nexport const handleRedirectResult = async () => {\n  try {\n    const result = await getRedirectResult(auth);\n    if (result) {\n      return {\n        name: result.user.displayName,\n        email: result.user.email,\n        uid: result.user.uid\n      };\n    }\n    return null;\n  } catch (error) {\n    console.error('Redirect result error:', error);\n    return null;\n  }\n}; "],"mappings":";AAAA,SAASA,kBAAkB,EAAEC,eAAe,EAAEC,kBAAkB,EAAEC,iBAAiB,QAAQ,eAAe;AAC1G,SAASC,aAAa,QAAQ,cAAc;AAC5C,SAASC,OAAO,QAAQ,eAAe;AACvC,OAAOC,GAAG;AAEV,IAAMC,cAAc,GAAGD,GAAG,CAACE,QAAQ;AAGnC,IAAMC,GAAG,GAAGL,aAAa,CAACG,cAAc,CAAC;AACzC,IAAMG,IAAI,GAAGL,OAAO,CAACI,GAAG,CAAC;AAEzB,OAAO,IAAME,gBAAgB;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;IAC1C,IAAI;MACF,IAAMC,SAAQ,GAAG,IAAId,kBAAkB,CAAC,CAAC;MACzCc,SAAQ,CAACC,mBAAmB,CAAC;QAC3BC,MAAM,EAAE,gBAAgB;QACxBC,YAAY,EAAEC,MAAM,CAACC,QAAQ,CAACC,MAAM;QACpCC,SAAS,EAAE;MACb,CAAC,CAAC;MAGFX,IAAI,CAACY,iBAAiB,CAAC,CAAC;MAExB,IAAMC,MAAM,SAAStB,eAAe,CAACS,IAAI,EAAEI,SAAQ,CAAC;MACpD,OAAO;QACLU,IAAI,EAAED,MAAM,CAACE,IAAI,CAACC,WAAW;QAC7BC,KAAK,EAAEJ,MAAM,CAACE,IAAI,CAACE,KAAK;QACxBC,GAAG,EAAEL,MAAM,CAACE,IAAI,CAACG;MACnB,CAAC;IACH,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C,IAAIA,KAAK,CAACE,IAAI,KAAK,8BAA8B,EAAE;QACjD,MAAM,IAAIC,KAAK,CAAC,oEAAoE,CAAC;MACvF,CAAC,MAAM,IAAIH,KAAK,CAACE,IAAI,KAAK,oBAAoB,EAAE;QAE9C,IAAI;UACF,MAAM7B,kBAAkB,CAACQ,IAAI,EAAEI,QAAQ,CAAC;UACxC,OAAO,IAAI;QACb,CAAC,CAAC,OAAOmB,aAAa,EAAE;UACtB,MAAM,IAAID,KAAK,CAAC,0DAA0D,CAAC;QAC7E;MACF,CAAC,MAAM;QACL,MAAM,IAAIA,KAAK,CAAC,kDAAkD,CAAC;MACrE;IACF;EACF,CAAC;EAAA,gBAlCYrB,gBAAgBA,CAAA;IAAA,OAAAC,IAAA,CAAAsB,KAAA,OAAAC,SAAA;EAAA;AAAA,GAkC5B;AAGD,OAAO,IAAMC,oBAAoB;EAAA,IAAAC,KAAA,GAAAxB,iBAAA,CAAG,aAAY;IAC9C,IAAI;MACF,IAAMU,MAAM,SAASpB,iBAAiB,CAACO,IAAI,CAAC;MAC5C,IAAIa,MAAM,EAAE;QACV,OAAO;UACLC,IAAI,EAAED,MAAM,CAACE,IAAI,CAACC,WAAW;UAC7BC,KAAK,EAAEJ,MAAM,CAACE,IAAI,CAACE,KAAK;UACxBC,GAAG,EAAEL,MAAM,CAACE,IAAI,CAACG;QACnB,CAAC;MACH;MACA,OAAO,IAAI;IACb,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C,OAAO,IAAI;IACb;EACF,CAAC;EAAA,gBAfYO,oBAAoBA,CAAA;IAAA,OAAAC,KAAA,CAAAH,KAAA,OAAAC,SAAA;EAAA;AAAA,GAehC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}