{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { GoogleAuthProvider, signInWithPopup } from 'firebase/auth';\nimport { initializeApp } from 'firebase/app';\nimport { getAuth } from 'firebase/auth';\nvar firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID\n};\nvar app = initializeApp(firebaseConfig);\nvar auth = getAuth(app);\nexport var signInWithGoogle = function () {\n  var _ref = _asyncToGenerator(function* () {\n    try {\n      var provider = new GoogleAuthProvider();\n      var result = yield signInWithPopup(auth, provider);\n      return {\n        name: result.user.displayName,\n        email: result.user.email,\n        uid: result.user.uid\n      };\n    } catch (error) {\n      console.error('Google sign in error:', error);\n      throw error;\n    }\n  });\n  return function signInWithGoogle() {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["GoogleAuthProvider","signInWithPopup","initializeApp","getAuth","firebaseConfig","apiKey","process","env","REACT_APP_API_KEY","authDomain","REACT_APP_AUTH_DOMAIN","projectId","REACT_APP_PROJECT_ID","storageBucket","REACT_APP_STORAGE_BUCKET","messagingSenderId","REACT_APP_MESSAGING_SENDER_ID","appId","REACT_APP_APP_ID","measurementId","REACT_APP_MEASUREMENT_ID","app","auth","signInWithGoogle","_ref","_asyncToGenerator","provider","result","name","user","displayName","email","uid","error","console","apply","arguments"],"sources":["/Users/almorris/cursor-test/frontend/src/services/auth.js"],"sourcesContent":["import { GoogleAuthProvider, signInWithPopup } from 'firebase/auth';\nimport { initializeApp } from 'firebase/app';\nimport { getAuth } from 'firebase/auth';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app);\n\nexport const signInWithGoogle = async () => {\n  try {\n    const provider = new GoogleAuthProvider();\n    const result = await signInWithPopup(auth, provider);\n    return {\n      name: result.user.displayName,\n      email: result.user.email,\n      uid: result.user.uid\n    };\n  } catch (error) {\n    console.error('Google sign in error:', error);\n    throw error;\n  }\n}; "],"mappings":";AAAA,SAASA,kBAAkB,EAAEC,eAAe,QAAQ,eAAe;AACnE,SAASC,aAAa,QAAQ,cAAc;AAC5C,SAASC,OAAO,QAAQ,eAAe;AAEvC,IAAMC,cAAc,GAAG;EACrBC,MAAM,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB;EACrCC,UAAU,EAAEH,OAAO,CAACC,GAAG,CAACG,qBAAqB;EAC7CC,SAAS,EAAEL,OAAO,CAACC,GAAG,CAACK,oBAAoB;EAC3CC,aAAa,EAAEP,OAAO,CAACC,GAAG,CAACO,wBAAwB;EACnDC,iBAAiB,EAAET,OAAO,CAACC,GAAG,CAACS,6BAA6B;EAC5DC,KAAK,EAAEX,OAAO,CAACC,GAAG,CAACW,gBAAgB;EACnCC,aAAa,EAAEb,OAAO,CAACC,GAAG,CAACa;AAC7B,CAAC;AAGD,IAAMC,GAAG,GAAGnB,aAAa,CAACE,cAAc,CAAC;AACzC,IAAMkB,IAAI,GAAGnB,OAAO,CAACkB,GAAG,CAAC;AAEzB,OAAO,IAAME,gBAAgB;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;IAC1C,IAAI;MACF,IAAMC,QAAQ,GAAG,IAAI1B,kBAAkB,CAAC,CAAC;MACzC,IAAM2B,MAAM,SAAS1B,eAAe,CAACqB,IAAI,EAAEI,QAAQ,CAAC;MACpD,OAAO;QACLE,IAAI,EAAED,MAAM,CAACE,IAAI,CAACC,WAAW;QAC7BC,KAAK,EAAEJ,MAAM,CAACE,IAAI,CAACE,KAAK;QACxBC,GAAG,EAAEL,MAAM,CAACE,IAAI,CAACG;MACnB,CAAC;IACH,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C,MAAMA,KAAK;IACb;EACF,CAAC;EAAA,gBAbYV,gBAAgBA,CAAA;IAAA,OAAAC,IAAA,CAAAW,KAAA,OAAAC,SAAA;EAAA;AAAA,GAa5B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}