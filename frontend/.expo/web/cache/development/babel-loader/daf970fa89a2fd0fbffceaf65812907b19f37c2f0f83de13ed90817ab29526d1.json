{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nexport var getInviteFromURL = function getInviteFromURL() {\n  try {\n    if (typeof window === 'undefined') return null;\n    var urlParams = new URLSearchParams(window.location.search);\n    var inviteCode = urlParams.get('invite') || urlParams.get('ref');\n    if (!inviteCode && window.location.hash) {\n      var hashParams = new URLSearchParams(window.location.hash.substring(1));\n      inviteCode = hashParams.get('invite') || hashParams.get('ref');\n    }\n    if (inviteCode) {\n      inviteCode = inviteCode.trim().toUpperCase();\n    }\n    console.log('Found invite code in URL:', inviteCode);\n    return inviteCode;\n  } catch (error) {\n    console.error('Error parsing URL parameters:', error);\n    return null;\n  }\n};\nexport var clearInviteFromURL = function clearInviteFromURL() {\n  try {\n    if (typeof window === 'undefined') return;\n    var url = new URL(window.location.href);\n    url.searchParams.delete('invite');\n    url.searchParams.delete('ref');\n    window.history.replaceState({}, '', url.toString());\n  } catch (error) {\n    console.error('Error clearing URL parameters:', error);\n  }\n};\nexport var getUrlParams = function getUrlParams() {\n  var params = new URLSearchParams(window.location.search);\n  return {\n    ref: params.get('ref'),\n    questions: parseInt(params.get('q')) || null,\n    refOffer: params.get('refOffer') === '1'\n  };\n};\nexport var isValidReferralCode = function () {\n  var _ref = _asyncToGenerator(function* (code) {\n    if (!code || code.length < 14) return false;\n    try {\n      var db = getFirestore();\n      var codesRef = collection(db, 'referralCodes');\n      var q = query(codesRef, where('code', '==', code));\n      var snapshot = yield getDocs(q);\n      if (snapshot.empty) return false;\n      var referral = snapshot.docs[0].data();\n      var now = new Date();\n      if (referral.used || referral.expiresAt.toDate() < now) {\n        return false;\n      }\n      return true;\n    } catch (error) {\n      console.error('Error validating referral code:', error);\n      return false;\n    }\n  });\n  return function isValidReferralCode(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["getInviteFromURL","window","urlParams","URLSearchParams","location","search","inviteCode","get","hash","hashParams","substring","trim","toUpperCase","console","log","error","clearInviteFromURL","url","URL","href","searchParams","delete","history","replaceState","toString","getUrlParams","params","ref","questions","parseInt","refOffer","isValidReferralCode","_ref","_asyncToGenerator","code","length","db","getFirestore","codesRef","collection","q","query","where","snapshot","getDocs","empty","referral","docs","data","now","Date","used","expiresAt","toDate","_x","apply","arguments"],"sources":["/Users/almorris/cursor-test/frontend/src/utils/urlUtils.js"],"sourcesContent":["export const getInviteFromURL = () => {\n  try {\n    // Check if we're in a web environment\n    if (typeof window === 'undefined') return null;\n\n    const urlParams = new URLSearchParams(window.location.search);\n    let inviteCode = urlParams.get('invite') || urlParams.get('ref');\n    \n    // Also check for hash parameters\n    if (!inviteCode && window.location.hash) {\n      const hashParams = new URLSearchParams(window.location.hash.substring(1));\n      inviteCode = hashParams.get('invite') || hashParams.get('ref');\n    }\n    \n    // Clean up the invite code\n    if (inviteCode) {\n      inviteCode = inviteCode.trim().toUpperCase();\n    }\n    \n    console.log('Found invite code in URL:', inviteCode); // Debug log\n    return inviteCode;\n  } catch (error) {\n    console.error('Error parsing URL parameters:', error);\n    return null;\n  }\n};\n\nexport const clearInviteFromURL = () => {\n  try {\n    if (typeof window === 'undefined') return;\n\n    const url = new URL(window.location.href);\n    url.searchParams.delete('invite');\n    url.searchParams.delete('ref');\n    \n    // Update URL without refreshing the page\n    window.history.replaceState({}, '', url.toString());\n  } catch (error) {\n    console.error('Error clearing URL parameters:', error);\n  }\n};\n\nexport const getUrlParams = () => {\n  const params = new URLSearchParams(window.location.search);\n  return {\n    ref: params.get('ref'),\n    questions: parseInt(params.get('q')) || null,\n    refOffer: params.get('refOffer') === '1'\n  };\n};\n\nexport const isValidReferralCode = async (code) => {\n  if (!code || code.length < 14) return false; // XXXX-XXXX-XXXX format\n  \n  try {\n    const db = getFirestore();\n    const codesRef = collection(db, 'referralCodes');\n    const q = query(codesRef, where('code', '==', code));\n    const snapshot = await getDocs(q);\n    \n    if (snapshot.empty) return false;\n    \n    const referral = snapshot.docs[0].data();\n    const now = new Date();\n    \n    // Check if code is expired or used\n    if (referral.used || referral.expiresAt.toDate() < now) {\n      return false;\n    }\n    \n    return true;\n  } catch (error) {\n    console.error('Error validating referral code:', error);\n    return false;\n  }\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}